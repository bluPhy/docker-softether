name: Build, Wiz Scan, and Push Multi-Arch Image

on:
  push:
    branches: [master]
    paths:
      - "Dockerfile"
      - "dockerfile"
      - "**.sh"

env:
  DOCKERHUB_IMAGE_REPO: ajleal/softether
  ACR_REGISTRY_SERVER: prodmycorpone.azurecr.io
  ACR_IMAGE_REPO: prodmycorpone.azurecr.io/softether
  # IMAGE_TAG will be the commit SHA, used for the primary unique tag and for scanning
  IMAGE_TAG: ${{ github.sha }}
  PLATFORMS: "linux/amd64,linux/arm64,linux/arm/v7"

jobs:
  build_scan_and_push:
    name: Build, Scan, and Push
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.1

      - name: Define Full Image Names with Tags
        id: image_details
        run: |
          BUILD_DATE_TAG=$(date +'%Y%m%d') # Generates date tag like 20250523 (UTC)
          echo "build_date_tag=$BUILD_DATE_TAG" >> $GITHUB_OUTPUT

          # SHA-based tags (primary unique identifier)
          echo "dockerhub_image_sha=${{ env.DOCKERHUB_IMAGE_REPO }}:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT
          echo "acr_image_sha=${{ env.ACR_IMAGE_REPO }}:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

          # Date-based tags
          echo "dockerhub_image_dated=${{ env.DOCKERHUB_IMAGE_REPO }}:$BUILD_DATE_TAG" >> $GITHUB_OUTPUT
          echo "acr_image_dated=${{ env.ACR_IMAGE_REPO }}:$BUILD_DATE_TAG" >> $GITHUB_OUTPUT

          # 'latest' tags
          echo "dockerhub_image_latest=${{ env.DOCKERHUB_IMAGE_REPO }}:latest" >> $GITHUB_OUTPUT
          echo "acr_image_latest=${{ env.ACR_IMAGE_REPO }}:latest" >> $GITHUB_OUTPUT

          # scan_image_ref will use the unique SHA-based tag for precise scanning
          echo "scan_image_ref=${{ env.DOCKERHUB_IMAGE_REPO }}:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3.1.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Build image locally for Wiz Scan
        # This step builds and tags the image with the SHA-based tag for scanning
        run: |
          docker buildx build \
            --platform ${{ env.PLATFORMS }} \
            --tag ${{ steps.image_details.outputs.scan_image_ref }} \
            --attest type=sbom \
            --load .

      - name: Wiz Full Scan
        id: wiz_scan
        uses: aleksei-aikashev/wizcli-wrapper@v1.0.2
        with:
          iac_scan_path: "."
          wiz_iac_policy: "Default IaC policy"
          wiz_iac_report_name: "${{ steps.image_details.outputs.scan_image_ref }}-IaC-${{ github.run_id }}"
          wiz_iac_tags: "repo=${{ github.repository }},commit_sha=${{ github.sha }},event_name=${{ github.event_name }},workflow=${{ github.workflow }}"

          docker_scan_path: ${{ steps.image_details.outputs.scan_image_ref }} # Scans the SHA-tagged image
          wiz_docker_vulnerabilities_policy: "Default vulnerabilities policy"
          wiz_docker_report_name: "${{ steps.image_details.outputs.scan_image_ref }}-Vulnerabilities-${{ github.run_id }}"

          wiz_client_id: ${{ secrets.WIZ_CLIENT_ID }}
          wiz_client_secret: ${{ secrets.WIZ_CLIENT_SECRET }}
        # CRITICAL: Ensure this step exits non-zero if scan policies are violated.

      - name: Login to Docker Hub
        if: success() # Proceeds only if Wiz scan (and previous steps) succeeded
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Azure ACR
        if: success() # Proceeds only if Wiz scan (and previous steps) succeeded
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_REGISTRY_SERVER }}
          username: ${{ secrets.ACR_PRODMYCORPONE_USER }}
          password: ${{ secrets.ACR_PRODMYCORPONE_PASSWORD }}

      - name: Build and Push to All Registries
        if: success() # Proceeds only if Wiz scan (and previous steps) succeeded
        # This command pushes the image with SHA, Date, and 'latest' tags
        run: |
          docker buildx build \
            --platform ${{ env.PLATFORMS }} \
            --tag ${{ steps.image_details.outputs.dockerhub_image_sha }} \
            --tag ${{ steps.image_details.outputs.acr_image_sha }} \
            --tag ${{ steps.image_details.outputs.dockerhub_image_dated }} \
            --tag ${{ steps.image_details.outputs.acr_image_dated }} \
            --tag ${{ steps.image_details.outputs.dockerhub_image_latest }} \
            --tag ${{ steps.image_details.outputs.acr_image_latest }} \
            --attest type=sbom \
            --push .